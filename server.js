// –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
const express = require('express');   // –°–∞–º —Å–µ—Ä–≤–µ—Ä
const multer = require('multer');     // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const cors = require('cors');         // –ß—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Å –¥—Ä—É–≥–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
const path = require('path');         // –†–∞–±–æ—Ç–∞ —Å –ø—É—Ç—è–º–∏

const app = express(); // –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ express
const PORT = 3000;     // –ù–∞ –∫–∞–∫–æ–º –ø–æ—Ä—Ç—É –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
const fs = require('fs');
// –í–∫–ª—é—á–∞–µ–º CORS (—Ä–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É)
app.use(cors());

// –ü–∞–ø–∫–∞, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∏
const uploadDir = path.join(__dirname, 'uploads');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ multer: –∫—É–¥–∞ –∏ –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, uploadDir); // –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + '-' + file.originalname); // —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
  }
});
const upload = multer({ storage: storage });

// ----------- üì§ API: –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -----------

app.post('/upload', upload.single('image'), (req, res) => {
  if (!req.file) {
    return res.status(400).json({ message: '–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω' });
  }
  res.json({ message: '–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ', filename: req.file.filename });
});

// ----------- üì• API: –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -----------

app.get('/image', (req, res) => {
  
  const files = fs.readdirSync(uploadDir);
  if (files.length === 0) {
    return res.status(404).send('–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
  }

  const firstImage = files[0];
  const imagePath = path.join(uploadDir, firstImage);
  res.sendFile(imagePath);
});
app.get('/images', (req, res) => {
    fs.readdir(uploadDir, (err, files) => {
      if (err) {
        return res.status(500).json({ message: '–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–∞–ø–∫–∏' });
      }
  
      const imageUrls = files.map(filename => `http://${req.hostname}:3000/image/${filename}`);
      res.json(imageUrls);
    });
  });
  app.get('/image/:filename', (req, res) => {
    const filename = req.params.filename;
    const filePath = path.join(uploadDir, filename);
    if (!fs.existsSync(filePath)) {
      return res.status(404).send('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    res.sendFile(filePath);
  });
// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
